name: Automation CI

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Brew and Yarn
        run: |
          # Install Linuxbrew (Homebrew) if not already installed
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          
          # Add Homebrew to PATH immediately
          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.bashrc
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          
          # Install yarn via brew
          brew install yarn

      - name: Install Node.js and Yarn
        run: |
          # Install Node.js 14.x (latest stable)
          curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt-get install -y nodejs
          
          # Install yarn via apt (if not already done via brew)
          sudo apt-get install -y yarn

      - name: Clone the frontend repo
        run: |
          git clone https://x-access-token:${{ secrets.Thinkst_PAT }}@github.com/thinkst-nick/vue-realworld-example-app-mogale.git
          mv vue-realworld-example-app-mogale vue-realworld-example-app
          cd vue-realworld-example-app

      - name: Initial install to create lockfile
        run: yarn install --ignore-scripts

      - name: Run the server
        run: |
          cd vue-realworld-example-app
          yarn cache clean
          yarn install  --ignore-scripts
          yarn add sass
          yarn add cross-env --dev
          NODE_OPTIONS=--openssl-legacy-provider yarn serve &

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install Google Chrome
        run: |
          chmod +x ./scripts/InstallChrome.sh
          ./scripts/InstallChrome.sh

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Tests
        run: ./gradlew test --info || true

      - name: Generate Allure report
        run: ./gradlew allureReport


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: build/reports/allure-report/allureReport
          overwrite: true

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            build/test-results/test/*.xml